@model StockManagementWebApp.Models.StockOut

@{
    ViewBag.Title = "Stockin";
}

<h2>Stockin</h2>


@using (Html.BeginForm("StockOut", "Stock", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StockIn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CompanyId, new SelectList(ViewBag.Company, "Value", "Text"), " Select Company", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="ItemId" name="ItemId" class="form-control"><option></option></select>
                @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">ReorderLabel</label>
            <div class="col-md-10">
                @Html.TextBox("ReorderLavel", "", new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Available Quantity</label>
            <div class="col-md-10">
                @Html.TextBox("AvailableQuantity", "", new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TotalQuantity, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TotalQuantity, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" onclick="myCreateFunction()" value="Add" />


            </div>
        </div>
        <table id="myTable" class="table table-bordered">
            <thead>
                <tr>
                    <th class="col">SL</th>
                    <th class="col">Item</th>
                    <th class="col">Company</th>
                    <th class="col">Quantity</th>
                    <th class="col">Action</th>


                </tr>
            </thead>
            <tbody id="createTable"></tbody>

        </table>
        <br>
        <input type="button" id="sell" value="sell" onclick="sellButton()" />
        <input type="button" id="lost" value="Lost" onclick="lostButton()" />
        <input type="button" id="demage" value="Demage" onclick="demageButton()" />



    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            $("#CompanyId").change(function () {
                $("#ItemId").empty();
                var comId = $("#CompanyId").val();
                var json = { companyId: comId };

                $.ajax({
                    type: "POST",
                    url: '/Stock/GetItemByCompanyId',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    dataType: "json",
                    success: function (data) {
                        $("#ItemId").append('<option value="">--Select a Item--</option>');
                        $.each(data,
                            function (key, value) {

                                $("#ItemId").append('<option value=' + value.Value + '>' + value.Text + '</option>');

                            });
                    }

                });
            });
            $("#ItemId").change(function () {
                $("#ReorderLavel").val("");
                $("#AvailableQuantity").val("");
                var itemId = $("#ItemId").val();
                var jsonData = { iId: itemId };

                $.ajax({
                    type: "POST",
                    url: '/Stock/GetdataByItemId',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsonData),
                    dataType: "json",

                    success: function (data) {

                        $("#ReorderLavel").val(data.Item.ReorderLavel);
                        $("#AvailableQuantity").val(data.TotalQuantity);

                    }

                });


                if (itemId == null) {
                    $("#ReorderLavel").val("");
                    $("#AvailableQuantity").val("");
                }


            });
            //$('#sell').click(function () {
            //    var table = $('#myTable').tableToJSON();
            //    alert(JSON.stringify(table));
            
        });




            function sellButton() {
                //create a json array from html
                var stockout = new Array();
                $("#createTable tr").each(function () {
                    var stock = {};
                    stock.itemid = $(this).find("td #ItemId").eq(0).val();
                    stock.companyid = $(this).find("td #CompanyId").eq(0).val();
                    stock.TotalQuantity = $(this).find("td").eq(3).html();
                    stock.trackid = 1;
                    stock.date = '@DateTime.Now.Date';
                    stockout.push(stock);
                });

                //Send the JSON array to Controller using AJAX.
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("StockOut","Stock")',
                    data: JSON.stringify(stockout),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (r) {
                        alert(r);
                        location.reload();
                    
                    }
                });
            }
        function lostButton() {
            //create a json array from html
            var stockout = new Array();
            $("#createTable tr").each(function () {
                var stock = {};
                stock.itemid = $(this).find("td #ItemId").eq(0).val();
                stock.companyid = $(this).find("td #CompanyId").eq(0).val();
                stock.TotalQuantity = $(this).find("td").eq(3).html();
                stock.trackid = 3;
                stock.date = '@DateTime.Now.Date';

                stockout.push(stock);
            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: '@Url.Action("StockOut","Stock")',
                data: JSON.stringify(stockout),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r);
                    location.reload();
                }
            });
        }
        function demageButton() {
            //create a json array from html
            var stockout = new Array();
            $("#createTable tr").each(function () {
                var stock = {};
                stock.itemid = $(this).find("td #ItemId").eq(0).val();
                stock.companyid = $(this).find("td #CompanyId").eq(0).val();
                stock.TotalQuantity = $(this).find("td").eq(3).html();
                stock.trackid = 2;
                stock.date = '@DateTime.Now.Date';
                stockout.push(stock);
            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: '@Url.Action("StockOut","Stock")',
                data: JSON.stringify(stockout),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r);
                    location.reload();
                }
            });
        }
        //Create Dom Table By Javascript
        function myCreateFunction() {
           
            var company = document.createTextNode($("#CompanyId option:selected").text());
            var item = document.createTextNode($("#ItemId option:selected").text());
            var companyiid = $("#CompanyId").val();
            var itemiid=$("#ItemId").val();
            var stockout = parseInt($("#TotalQuantity").val());
            var avail = parseInt($("#AvailableQuantity").val());

           

            

            if (companyiid < 1) {
                alert('Please select a Company');
                $('#CompanyId').focus();
                return false;

            }
            if (itemiid < 1) {
                alert('Please select a Item');
                $('#ItemId').focus();
                return false;

            }
            if (stockout == "") {
                alert('Please fillup This');
                $('#TotalQuantity').focus();
                return false;

            }
            var reg0Str = '^[0-9]*\\.?[0-9]{0,2}$';
            var reg0 = new RegExp(reg0Str);
            if (!reg0.test(stockout)) {
                alert('Please Enter A Valid Number');
                $('#TotalQuantity').focus();
                return false;

            }
           
            var r = avail < stockout;

            if (r) {
                alert('Item Stock not Available');
                $('#TotalQuantity').focus();
                return false;
            }
            


            var x = document.getElementById('createTable').rows.length;
            var table = document.getElementById("createTable");
            


            var row = table.insertRow(-1);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            var cell4 = row.insertCell(3);
            var cell5 = row.insertCell(4);


            cell1.innerHTML = x + 1;


            cell2.appendChild(item);

            var itemid = document.createElement('input');
            itemid.type = 'hidden';
            itemid.value = $("#ItemId").val();;
            itemid.id = 'ItemId';
            cell2.appendChild(itemid);

            cell3.appendChild(company);
            var companyid = document.createElement('input');
            companyid.type = 'hidden';
            companyid.value = companyiid;
            companyid.id = 'CompanyId';
            cell3.appendChild(companyid);

            //var itemtext = $("td").eq(1).text();


            //if (x>=2) {
            //    if (itemtext === item.data) {
            //        var r = $("tr").find("td").eq(3).text();
            //        var q = parseInt(r);
            //        cell4.innerHTML = q + stockout;;
            //    }
            //} else {
            //    cell4.innerHTML = stockout;
            //}


            cell4.innerHTML = stockout;


            var removeBtn = document.createElement('input');
            removeBtn.type = 'button';
            removeBtn.value = "Remove";
            removeBtn.setAttribute("onclick", "myDeleteFunction(this)");
            cell5.appendChild(removeBtn);
            $("#AvailableQuantity").val(avail - stockout); 
            return true;
        }
        //For Remove Specific table Row
        function myDeleteFunction(button) {
            var i = button.parentNode.parentNode.rowIndex;
            var item = button.parentNode.parentNode.childNodes;
            if (confirm("Do you want to delete: " + item[0].textContent)) {
                document.getElementById("myTable").deleteRow(i);

            }


        }






    </script>
}
