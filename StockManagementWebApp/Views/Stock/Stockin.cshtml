@model StockManagementWebApp.Models.StockIn

@{
    ViewBag.Title = "Stockin";
}

<h2>Stockin</h2>


@using (Html.BeginForm("Stockin","Stock",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StockIn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CompanyId, new SelectList(ViewBag.Company, "Value", "Text"), " Select Company", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="ItemId" name="ItemId" class="form-control"><option></option></select>
                @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">ReorderLabel</label>
            <div class="col-md-10">
                @Html.TextBox("ReorderLavel", "", new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Available Quantity</label>
            <div class="col-md-10">
                @Html.TextBox("AvailableQuantity", "", new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalQuantity, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $(document).ready(function () {

            $("#CompanyId").change(function () {
                $("#ItemId").empty();
                var comId = $("#CompanyId").val();
                var json = { companyId: comId };

                $.ajax({
                    type: "POST",
                    url: '/Stock/GetItemByCompanyId',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    dataType: "json",
                    success: function (data) {
                        $("#ItemId").append('<option>--Select a Item--</option>');
                        $.each(data,
                            function (key, value) {

                                $("#ItemId").append('<option value=' + value.Value + '>' + value.Text + '</option>');

                            });
                    }

                });
            });
            $("#ItemId").change(function () {
                $("#ReorderLavel").val("");
                $("#AvailableQuantity").val("");
                var itemId = $("#ItemId").val();
                var jsonData = { iId: itemId };

                $.ajax({
                    type: "POST",
                    url: '/Stock/GetdataByItemId',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(jsonData),
                    dataType: "json",

                    success: function (data) {

                        $("#ReorderLavel").val(data.Item.ReorderLavel);
                        $("#AvailableQuantity").val(data.TotalQuantity);

                    }

                });


                if (itemId == null) {
                    $("#ReorderLavel").val("");
                    $("#AvailableQuantity").val("");
                }


            });
        });
    </script>
}
